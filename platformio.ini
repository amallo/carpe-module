[platformio]
default_envs = carpe-lora

[env:carpe-lora]
platform = espressif32
board = ttgo-lora32-v1
framework = arduino
monitor_speed = 115200
upload_speed = 115200
build_flags = 
    -DCONFIG_WIFI_ENABLED=0
    -DCONFIG_FREERTOS_UNICORE=1
    -DBOARD_HAS_PSRAM=0
    -DCONFIG_BT_NIMBLE_ENABLED=1
    -DCONFIG_BT_BLE_ENABLED=0
    -Os
    -DNDEBUG
    -DCORE_DEBUG_LEVEL=0
build_src_filter = +<main.cpp> +<core/>
lib_deps =
    sandeepmistry/LoRa @ ^0.8.0
    adafruit/Adafruit GFX Library
    adafruit/Adafruit SSD1306
    h2zero/NimBLE-Arduino @ ^1.4.0

; ANCIENNE VERSION : ESP32 BLE classique (plus utilisée - garde 813KB Flash)
[env:carpe-lora-legacy]
platform = espressif32
board = ttgo-lora32-v1
framework = arduino
monitor_speed = 115200
upload_speed = 115200
build_flags = 
    -DCONFIG_WIFI_ENABLED=0
    -DCONFIG_FREERTOS_UNICORE=1
    -DBOARD_HAS_PSRAM=0
    -Os
    -DNDEBUG
    -DCORE_DEBUG_LEVEL=0
build_src_filter = +<main.cpp> +<core/>
lib_deps =
    sandeepmistry/LoRa @ ^0.8.0
    adafruit/Adafruit GFX Library
    adafruit/Adafruit SSD1306
    h2zero/NimBLE-Arduino @ ^1.4.0

#[env:sender]
#extends = env:carpe-lora
#src_filter = +<sender.cpp>
#upload_port = /dev/cu.usbserial-583A0089721

#[env:receiver]
#extends = env:carpe-lora
#src_filter = +<receiver.cpp>
#upload_port = /dev/cu.usbserial-51851218391

; Environnement pour les tests sur ESP32 - Simple et efficace
[env:test]
platform = espressif32
board = ttgo-lora32-v1
framework = arduino
monitor_speed = 115200
upload_speed = 115200
build_flags = 
    -DUNITY_INCLUDE_DOUBLE
    -DUNITY_DOUBLE_PRECISION=1e-12
build_src_filter = +<core/> -<main.cpp>
test_framework = unity
test_build_src = true
lib_deps =
    sandeepmistry/LoRa @ ^0.8.0
    adafruit/Adafruit GFX Library
    adafruit/Adafruit SSD1306

; Environnement pour les tests natifs sur desktop - Clean Architecture avec injection de dépendances
[env:test_native]
platform = native
build_flags = 
    -DNATIVE_BUILD
    -DUNITY_INCLUDE_DOUBLE
    -DUNITY_DOUBLE_PRECISION=1e-12
    -std=c++17
build_src_filter = 
    +<core/device/>
    -<main.cpp>
    -<core/config/>
    -<core/transport/>
    -<core/OLEDScreen.cpp>
    -<core/Screen.h>
    -<core/common/>
test_framework = unity
test_build_src = true
test_filter = device/*
test_ignore = 
    test_main.cpp
    test_random_device_id_generator.cpp
    test_bluetooth_integration.cpp
    test_config_manager.cpp
    test_nvs_config_manager.cpp
    test_device_id_generator_interface.cpp
    test_*native*
    *native*
