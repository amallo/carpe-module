#include "ConfigManager.h"

ConfigManager::ConfigManager() : config(JSON_BUFFER_SIZE) {}

bool ConfigManager::begin() {
    Serial.println("üîß Initialisation de SPIFFS...");
    
    if (!SPIFFS.begin(true)) {
        Serial.println("‚ùå Erreur: SPIFFS.begin() a √©chou√©");
        Serial.println("   - V√©rifiez que le filesystem a √©t√© upload√© avec: pio run --target uploadfs");
        return false;
    }
    
    Serial.println("‚úÖ SPIFFS initialis√© avec succ√®s");
    
    
    return true;
}

bool ConfigManager::loadConfig() {
    Serial.println("üìñ Tentative de chargement de /config.json...");
    
    File configFile = SPIFFS.open("/config.json", "r");
    if (!configFile) {
        Serial.println("‚ö†Ô∏è  Fichier /config.json non trouv√©");
        return false; // Pas de cr√©ation automatique ici
    }
    
    Serial.println("‚úÖ Fichier /config.json ouvert (" + String(configFile.size()) + " bytes)");
    
    DeserializationError error = deserializeJson(config, configFile);
    configFile.close();
    
    if (error) {
        Serial.println("‚ùå Erreur lors du parsing du JSON: " + String(error.c_str()));
        return false;
    }
    
    Serial.println("‚úÖ Configuration charg√©e avec succ√®s");
    return true;
}

bool ConfigManager::saveConfig() {
    Serial.println("üíæ Sauvegarde de la configuration...");
    
    File configFile = SPIFFS.open("/config.json", "w");
    if (!configFile) {
        Serial.println("‚ùå Impossible de cr√©er/ouvrir config.json");
        return false;
    }
    
    serializeJson(config, configFile);
    configFile.close();
    
    Serial.println("‚úÖ Configuration sauvegard√©e dans /config.json");
    return true;
}

String ConfigManager::getDeviceId() {
    return config["device"]["id"].as<String>();
}


void ConfigManager::setDeviceId(const String& id) {
    config["device"]["id"] = id;
}

void ConfigManager::printConfig() {
    Serial.println("=== Configuration ===");
    Serial.println("Device ID: " + getDeviceId());
    Serial.println("=====================");
} 